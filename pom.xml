<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>sourceforge.net</groupId>
	<artifactId>krut</artifactId>
	<version>0.9.6</version>
	<packaging>jar</packaging>

	<properties>
		<jdk.version>1.6</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.media</groupId>
			<artifactId>jmf</artifactId>
			<version>2.1.1e</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!-- Set a JDK compiler level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>

			<!-- Make this jar executable -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>krut.Run_KRUT</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Exec plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>krut.Run_KRUT</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>webstart-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jnlp</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--outputDirectory></outputDirectory --> <!-- not required?? -->

					<!-- Set to true to exclude all transitive dependencies. Default is 
						false. -->
					<excludeTransitive>false</excludeTransitive>

					<!-- The path where the libraries are stored within the jnlp structure. 
						not required. by default the libraries are within the working directory -->
					<libPath>lib</libPath>

					<!-- [optional] transitive dependencies filter - if omitted, all transitive 
						dependencies are included -->
					<dependencies>
						<!-- <includes> <include>commons-logging:commons-logging</include> 
							<include>commons-cli:commons-cli</include> </includes> -->					<!-- excludes> <exclude></exclude> <excludes -->
					</dependencies>

					<!--resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory --> <!-- default value -->

					<!-- JNLP generation -->
					<jnlp>
						<!-- default values -->
						<!--inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath -->
						<!--inputTemplate>src/main/jnlp/template.vm</inputTemplate --> <!-- relative to inputTemplateResourcePath -->
						<outputFile>app.jnlp</outputFile> <!-- defaults to launch.jnlp -->

						<!-- used to automatically identify the jar containing the main class. -->
						<!-- this is perhaps going to change -->
						<mainClass>org.apache.commons.cli.BasicParser</mainClass>
					</jnlp>


					<!-- SIGNING -->
					<!-- defining this will automatically sign the jar and its dependencies, 
						if necessary -->
					<sign>
						<keystore>keystore.jks</keystore>
						<keypass>changeme</keypass>  <!-- we need to override passwords easily from the command line. ${keypass} -->
						<storepass>changeme</storepass> <!-- ${storepass} -->
						<!--storetype>fillme</storetype -->
						<alias>selfsigned</alias>

						<!--validity>fillme</validity -->

						<!-- only required for generating the keystore -->
						<!--dnameCn>fillme</dnameCn> <dnameOu>fillme</dnameOu> <dnameO>fillme</dnameO> 
							<dnameL>fillme</dnameL> <dnameSt>fillme</dnameSt> <dnameC>fillme</dnameC -->

						<verify>true</verify> <!-- verify that the signing operation succeeded -->

						<!-- KEYSTORE MANAGEMENT -->
						<keystoreConfig>
							<delete>false</delete> <!-- delete the keystore -->
							<gen>false</gen>       <!-- optional shortcut to generate the store. -->
						</keystoreConfig>
					</sign>

					<!-- BUILDING PROCESS -->

					<pack200>
						<enabled>true</enabled>
					</pack200>
					<gzip>true</gzip> <!-- default force when pack200 false, true when pack200 selected ?? -->

					<!-- causes a version attribute to be output in each jar resource element, 
						optional, default is false -->
					<outputJarVersions>true</outputJarVersions>

					<!--install>false</install --> <!-- not yet supported -->
					<verbose>true</verbose>

				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jdk18</id>
			<activation>
				<jdk>1.8</jdk>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>webstart-maven-plugin</artifactId>
							<dependencies>
								<dependency>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>webstart-pack200-impl</artifactId>
									<version>1.0-beta-6</version>
								</dependency>
								<dependency>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>keytool-api-1.7</artifactId>
									<version>1.4</version>
								</dependency>
							</dependencies>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>